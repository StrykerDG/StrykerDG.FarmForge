(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return O}));var i=n(0),r=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=r.a.createContext({}),l=function(e){var t=r.a.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},b=function(e){var t=l(e.components);return r.a.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,a=s(e,["components","mdxType","originalType","parentName"]),b=l(n),d=i,O=b["".concat(c,".").concat(d)]||b[d]||u[d]||o;return n?r.a.createElement(O,p(p({ref:t},a),{},{components:n})):r.a.createElement(O,p({ref:t},a))}));function O(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,c=new Array(o);c[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:i,c[1]=p;for(var a=2;a<o;a++)c[a]=n[a];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var i=n(2),r=n(6),o=(n(0),n(101)),c={id:"api",title:"API",sidebar_label:"API"},p={unversionedId:"development/api",id:"development/api",isDocsHomePage:!1,title:"API",description:"Description",source:"@site/docs\\development\\api.md",slug:"/development/api",permalink:"/docs/development/api",editUrl:"https://github.com/StrykerDG/StrykerDG.FarmForge/tree/master/StrykerDG.FarmForge.Documentation/docs/development/api.md",version:"current",sidebar_label:"API",sidebar:"someSidebar",previous:{title:"Client",permalink:"/docs/development/client"},next:{title:"External API",permalink:"/docs/development/ext_api"}},s=[{value:"Description",id:"description",children:[]},{value:"Dependencies",id:"dependencies",children:[]},{value:"Endpoints",id:"endpoints",children:[{value:"Auth",id:"auth",children:[]},{value:"Crops",id:"crops",children:[]},{value:"CropClassifications",id:"cropclassifications",children:[]},{value:"CropLogs",id:"croplogs",children:[]},{value:"CropTypes",id:"croptypes",children:[]},{value:"Devices",id:"devices",children:[]},{value:"Locations",id:"locations",children:[]},{value:"LogTypes",id:"logtypes",children:[]},{value:"Products",id:"products",children:[]},{value:"Statuses",id:"statuses",children:[]},{value:"Suppliers",id:"suppliers",children:[]},{value:"Units",id:"units",children:[]}]}],a={rightToc:s};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},a,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"The FarmForge API is written in C#, and uses .Net Core."),Object(o.b)("h2",{id:"dependencies"},"Dependencies"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(i.a)({parentName:"li"},{href:"https://www.google.com"}),".Net Core")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(i.a)({parentName:"li"},{href:"https://www.google.com"}),"Akka.Net")," for logic"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(i.a)({parentName:"li"},{href:"https://www.google.com"}),"FluentMigrator")," for running migrations at startup"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(i.a)({parentName:"li"},{href:"https://www.google.com"}),"Entity Framework")," for database connections"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(i.a)({parentName:"li"},{href:"https://www.google.com"}),"NSwag")," for openAPI documentation")),Object(o.b)("h2",{id:"endpoints"},"Endpoints"),Object(o.b)("h3",{id:"auth"},"Auth"),Object(o.b)("h4",{id:"post-authlogin"},"POST /Auth/Login"),Object(o.b)("p",null,"Description: Used to receive a token",Object(o.b)("br",null),"\nBody:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "Username": "string",\n    "Password": "string"\n}\n')),Object(o.b)("h4",{id:"get-authusers"},"GET /Auth/Users"),Object(o.b)("p",null,"Description: Used to get a list of users"),Object(o.b)("h4",{id:"post-authusers"},"POST /Auth/Users"),Object(o.b)("p",null,"Description: Used to create a user",Object(o.b)("br",null),"\nBody:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "Username": "string",\n    "Password": "string"\n}\n')),Object(o.b)("h4",{id:"deleteauthusersuserid"},"DELETE/Auth/Users/{userId}"),Object(o.b)("p",null,"Description: Used to delete a user",Object(o.b)("br",null),"\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"userId (int) - the Id of the user you want to delete")),Object(o.b)("h3",{id:"crops"},"Crops"),Object(o.b)("h4",{id:"get-crops"},"GET /Crops"),Object(o.b)("p",null,"Description: Get a list of crops",Object(o.b)("br",null),"\nParameters"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"begin (string) - String that is parsed for a DateTime"),Object(o.b)("li",{parentName:"ul"},"end (string) - String that is parsed for a DateTime"),Object(o.b)("li",{parentName:"ul"},"includes (string) - Specifies which joins to include"),Object(o.b)("li",{parentName:"ul"},"status (string) - Specifies the status of crops you want"),Object(o.b)("li",{parentName:"ul"},"location (string) - Specifies the location of crops you want")),Object(o.b)("h4",{id:"post-crops"},"POST /Crops"),Object(o.b)("p",null,"Description: Creates a new Crop\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "CropTypeId": "int",\n    "VarietyId": "int",\n    "LocationId": "int",\n    "Quantity": "int",\n    "Date": "dateTime"\n}\n')),Object(o.b)("h4",{id:"patch-cropscropidlogs"},"PATCH /Crops/{cropId}/Logs"),Object(o.b)("p",null,"Description: Creates a new log for the specified crop\nParameters"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"cropId (int) - The id of the crop that the new log is attached to\nBody:")),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "LogTypeId": "int",\n    "CropStatusId": "int",\n    "Notes": "string",\n    "UnitTypeId": "int",\n    "Quantity": "int"\n}\n')),Object(o.b)("h3",{id:"cropclassifications"},"CropClassifications"),Object(o.b)("h4",{id:"get-cropclassifications"},"GET /CropClassifications"),Object(o.b)("p",null,"Description: Get a list of CropClassifications"),Object(o.b)("h3",{id:"croplogs"},"CropLogs"),Object(o.b)("h4",{id:"get-croplogs"},"GET /CropLogs"),Object(o.b)("p",null,"Description: Used to get a list logs",Object(o.b)("br",null),"\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"type (string) - specify the type of log you want")),Object(o.b)("h3",{id:"croptypes"},"CropTypes"),Object(o.b)("h4",{id:"get-croptypes"},"GET /CropTypes"),Object(o.b)("p",null,"Description: Used to get a list crop types"),Object(o.b)("h4",{id:"post-croptypes"},"POST /CropTypes"),Object(o.b)("p",null,"Description: Used to create a new type",Object(o.b)("br",null),"\nBody:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "Name": "string",\n    "ClassificationId": "int"\n}\n')),Object(o.b)("h4",{id:"delete-croptypesid"},"DELETE /CropTypes/{id}"),Object(o.b)("p",null,"Description: Used to get a list logs",Object(o.b)("br",null),"\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"id (int) - specify the id of the crop type you want to delete")),Object(o.b)("h4",{id:"post-croptypescroptypeidvarietyvarietyname"},"POST /CropTypes/{cropTypeId}/Variety/{varietyName}"),Object(o.b)("p",null,"Description: Used to create a new variety for the specified crop type",Object(o.b)("br",null),"\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"cropTypeId (int) - The id of the crop type you're adding a variety to"),Object(o.b)("li",{parentName:"ul"},"varietyName (string) - The name of the variety you want to add")),Object(o.b)("h4",{id:"delete-croptypescroptypeidvarietyvarietyid"},"DELETE /CropTypes/{cropTypeId}/Variety/{varietyId}"),Object(o.b)("p",null,"Description: Used to delete a variety from a crop",Object(o.b)("br",null),"\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"cropTypeId (int) - the id of the crop type you're removing the variety from"),Object(o.b)("li",{parentName:"ul"},"varietyId (int) - the id of the variety you want to remove")),Object(o.b)("h3",{id:"devices"},"Devices"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Coming soon!")),Object(o.b)("h3",{id:"locations"},"Locations"),Object(o.b)("h4",{id:"get-locations"},"GET /Locations"),Object(o.b)("p",null,"Description: Used to get a list of locations"),Object(o.b)("h4",{id:"post-locations"},"POST /Locations"),Object(o.b)("p",null,"Description: Used to create a new location",Object(o.b)("br",null),"\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "Label": "string",\n    "ParentId: "int"\n}\n')),Object(o.b)("h4",{id:"patch-locations"},"PATCH /Locations"),Object(o.b)("p",null,"Description: Used to update a location",Object(o.b)("br",null),"\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "Fields" : "string"\n    "Location": "Location"\n}\n')),Object(o.b)("h4",{id:"delete-locationslocationid"},"DELETE /Locations/{locationId}"),Object(o.b)("p",null,"Description: Used to delete the specified location",Object(o.b)("br",null),"\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"locationId (int) - the id of the location you wish to delete")),Object(o.b)("h3",{id:"logtypes"},"LogTypes"),Object(o.b)("h4",{id:"get-logtypesentitytype"},"GET /LogTypes/{entityType}"),Object(o.b)("p",null,"Description: Used to get the log types related to an entity",Object(o.b)("br",null),"\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"entityType (string) - the entity you want to get logs types for")),Object(o.b)("h3",{id:"products"},"Products"),Object(o.b)("h4",{id:"get-productsinventory"},"GET /Products/Inventory"),Object(o.b)("p",null,"Description: Gets a list of products that are currently in inventory"),Object(o.b)("h4",{id:"post-productsinventory"},"POST /Products/Inventory"),Object(o.b)("p",null,"Description: Creates a new item in inventory\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "SupplierId": "int",\n    "ProductTypeId": "int",\n    "LocationId": "int",\n    "Quantity": "int",\n    "UnitTypeId": "int"\n}\n')),Object(o.b)("h4",{id:"post-productsconsume"},"POST /Products/Consume"),Object(o.b)("p",null,"Description: Consumes the specified products\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "ProductIds": "List<int>"\n}\n')),Object(o.b)("h4",{id:"post-productsinventorytransfer"},"POST /Products/Inventory/Transfer"),Object(o.b)("p",null,"Description: Transfers inventory from one location to another\nBody:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "ProductIds": "int[]",\n    "LocationId": "int"\n}\n')),Object(o.b)("h4",{id:"post-productsinventorysplit"},"POST /Products/Inventory/Split"),Object(o.b)("p",null,"Description: Converts the specified products into a new unit based on the UnitTypeConversion\nBody:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "ProductIds": "List<int>",\n    "UnitTypeConversionId": "int",\n    "LocationId": "int"\n}\n')),Object(o.b)("h4",{id:"get-products"},"GET /Products"),Object(o.b)("p",null,"Description: Retrieves a list of product types"),Object(o.b)("h4",{id:"post-products"},"POST /Products"),Object(o.b)("p",null,"Description: Creates a new ProductType\nBody:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "ProductTypeId": "int",\n    "ProductCategoryId": "int",\n    "Name": "string",\n    "Label": "string",\n    "ReorderLevel": "int"\n}\n')),Object(o.b)("h4",{id:"patch-products"},"PATCH /Products"),Object(o.b)("p",null,"Description: Updates the specified product type\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "ProductTypeId": "int",\n    "ProductCategoryId": "int",\n    "Name": "string",\n    "Label": "string",\n    "ReorderLevel": "int"\n}\n')),Object(o.b)("h4",{id:"delete-productsproducttypeid"},"DELETE /Products/{productTypeId}"),Object(o.b)("p",null,"Description: Deletes the specified product type\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"productTypeId (int) - The id of the product type you wish to delete")),Object(o.b)("h4",{id:"get-productscategories"},"GET /Products/Categories"),Object(o.b)("p",null,"Description: Retrieves a list of product categories"),Object(o.b)("h4",{id:"post-productscategories"},"POST /Products/Categories"),Object(o.b)("p",null,"Description: Creates a new product category\nBody:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "ProductCategoryId": "int",\n    "Name": "string",\n    "Label": "string",\n    "Description": "string"\n}\n')),Object(o.b)("h4",{id:"delete-productscategoriesproductcategoryid"},"DELETE /Products/Categories/{productCategoryId}"),Object(o.b)("p",null,"Description: Deletes the specified product category\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"productCategoryId (int) - The id of the category you want to delete")),Object(o.b)("h3",{id:"statuses"},"Statuses"),Object(o.b)("h4",{id:"get-statusesentitytype"},"GET /Statuses/{entityType}"),Object(o.b)("p",null,"Description: Used to get the statuses related to an entity",Object(o.b)("br",null),"\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"entityType (string) - the entity you want to get statuses for")),Object(o.b)("h3",{id:"suppliers"},"Suppliers"),Object(o.b)("h4",{id:"get-suppliers"},"GET /Suppliers"),Object(o.b)("p",null,"Description: Retrieves a list of suppliers\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"includes (string) - specify if you wish to include the supplier products")),Object(o.b)("h4",{id:"post-suppliers"},"POST /Suppliers"),Object(o.b)("p",null,"Description: Create a new supplier\nBody:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "Supplier": "Supplier",\n    "ProductIds": "List<int>"\n}\n')),Object(o.b)("h4",{id:"patch-suppliers"},"PATCH /Suppliers"),Object(o.b)("p",null,"Description: Updates the specified Supplier\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "Supplier": "Supplier",\n    "ProductIds": "List<int>"\n}\n')),Object(o.b)("h4",{id:"delete-supplierssupplierid"},"DELETE /Suppliers/{supplierId}"),Object(o.b)("p",null,"Description: Deletes the specified supplier\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"supplierId (int) - The id of the supplier you want to delete")),Object(o.b)("h4",{id:"get-supplierssupplieridproducts"},"GET /Suppliers/{supplierId}/Products"),Object(o.b)("p",null,"Description: Retrieves the products that the supplier provides\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"supplierId (int) - The id of the supplier you want products for")),Object(o.b)("h3",{id:"units"},"Units"),Object(o.b)("h4",{id:"get-units"},"GET /Units"),Object(o.b)("p",null,"Description: Retrieves the unit types"),Object(o.b)("h4",{id:"post-units"},"POST /Units"),Object(o.b)("p",null,"Description: Creates a new unit type\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "UnitTypeId": "int",\n    "Name": "string",\n    "Label": "string",\n    "Description": "string"\n}\n')),Object(o.b)("h4",{id:"delete-unitsunittypeid"},"DELETE /Units/{unitTypeId}"),Object(o.b)("p",null,"Description: Delete the specified unit type\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"unitTypeId (int) - The id of the unit type you want to delete")),Object(o.b)("h4",{id:"get-unitsconversions"},"GET /Units/Conversions"),Object(o.b)("p",null,"Description: Retrieve a list of unit type conversions"),Object(o.b)("h4",{id:"get-unitsconversionsunitid"},"GET /Units/Conversions/{unitId}"),Object(o.b)("p",null,"Description: Retrieve a list of conversions for a speficic unit\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"unitId (int) - The id of the unit you want conversions for")),Object(o.b)("h4",{id:"post-unitsconversions"},"POST /Units/Conversions"),Object(o.b)("p",null,"Description: Creates a new UnitTypeConversion\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "UnitTypeConversionId": "int",\n    "FromUnitId": "int",\n    "ToUnitId": "int",\n    "FromQuantity": "int",\n    "ToQuantity": "int"\n}\n')),Object(o.b)("h4",{id:"patch-unitsconversions"},"PATCH /Units/Conversions"),Object(o.b)("p",null,"Description: Updates the specified UnitTypeConversion\nBody: "),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),'{\n    "UnitTypeConversionId": "int",\n    "FromUnitId": "int",\n    "ToUnitId": "int",\n    "FromQuantity": "int",\n    "ToQuantity": "int"\n}\n')),Object(o.b)("h4",{id:"delete-unitsconversionsconversionid"},"DELETE /Units/Conversions/{conversionId}"),Object(o.b)("p",null,"Description: Deletes the specified unit type conversion\nParameters:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"conversionId (int) - The id of the unit type conversion you want to delete")))}l.isMDXComponent=!0}}]);